#!/bin/bash
PID_FILE="/run/chatService.pid"
LOG_FILE="/var/log/chatService.log"
LOG_ERR_FILE="/var/log/chatService.error.log"
APP_NAME="Chat Service"
APP_DIR="/home/WD-B-3"
APP="/src/index.js"
NODE="node"
USAGE="Usage: $0 {start|stop|restart|status|info}"

##############################################################################
#
# First of all, set variables in top of this file according to your environment
# values.
#
# Copy "chat" script file to /etc/init.d folder, you may need root
# permissions for it.
#
# Now you can run Chat Service.
# For running service run command "service chat start"
# For stop - "service chat stop"
# For restart - "service chat restart"
# Got getting information about service state - "service chat state"
#
# Also you may not copy chat script file to /etc/init.d folder, you may run it
# directly from chat project folder. For example "./chat start"
#
##############################################################################

pid_file_exists() {
    [ -f "$PID_FILE" ]
}

get_pid() {
    echo "$(cat "$PID_FILE")"
}

is_running() {
    PID="$(get_pid)"
    [ -d /proc/$PID ]
 }

start() {
    if pid_file_exists
    then
	if is_running
	then
	    echo "$APP_NAME already running, pid: $(get_pid)"
	    exit 1
	fi
	echo "$APP_NAME not running, but pid file exists, pid: $(get_pid)."
	echo "Delete $PID_FILE or stop service, for running."
	exit 1
    fi
    echo "Start $APP_NAME"
    cd $APP_DIR
    $NODE $APP_DIR$APP >> $LOG_FILE 2>> $LOG_ERR_FILE & echo $! > $PID_FILE
    exit 1
}

stop() {
    if pid_file_exists
    then
	PID="$(get_pid)"
	if is_running
	then
	    kill $PID
	    wait $PID 2> /dev/null
	fi
	rm $PID_FILE
	echo "Stoped $APP_NAME process, pid: $PID"
    else 
	echo "Stoped $APP_NAME process."
    fi
}

status() {
    if pid_file_exists
    then
	if is_running
	then
	    echo "Process $APP_NAME running, pid: $(get_pid)"
	    exit 1
	else
	    echo "Process $APP_NAME stopped, but pid file \"$PID_FILE\" exsists."
	    exit 1
	fi
    fi
    echo "Process $APP_NAME already stopped, pid file dosen't exists."
    exit 1
}

restart() {
    if pid_file_exists
    then
	if is_running
	then
	    echo "Restarting $APP_NAME..."
	else
	    echo "Process was stop, but pid file exists. Restarting $APP_NAME..."
	fi
    fi
    stop
    start
    exit 1;
}

case "$1" in
    start)
	start
	;;
    stop)
	stop
	exit 1
	;;
    restart)
	restart
	;;
    status)
	status
	;;
    info)
	echo $USAGE
	exit 1
	;;
    *)
	echo $USAGE
	exit 1
	;;
esac

